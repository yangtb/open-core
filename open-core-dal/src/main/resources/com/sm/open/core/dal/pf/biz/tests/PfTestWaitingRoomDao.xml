<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sm.open.core.dal.pf.biz.tests.PfTestWaitingRoomDao">
    <insert id="startExam" useGeneratedKeys="true" keyProperty="idTestexec">
        INSERT INTO exm_testexec
        (
        <trim suffixOverrides=",">
            <if test="idTestexec!=null">
                id_testexec,
            </if>
            <if test="idTestplanDetail!=null">
                id_testplan_detail,
            </if>
            <if test="idStudent!=null">
                id_student,
            </if>
            <if test="idMedicalrec!=null">
                id_medicalrec,
            </if>
            <if test="sort!=null">
                sort,
            </if>
            <if test="idOrg!=null">
                id_org,
            </if>
            <if test="sdTestexec!=null">
                sd_testexec,
            </if>
                dt_exec_begin,
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="idTestexec!=null">
                #{idTestexec},
            </if>
            <if test="idTestplanDetail!=null">
                #{idTestplanDetail},
            </if>
            <if test="idStudent!=null">
                #{idStudent},
            </if>
            <if test="idMedicalrec!=null">
                #{idMedicalrec},
            </if>
            <if test="sort!=null">
                #{sort},
            </if>
            <if test="idOrg!=null">
                #{idOrg},
            </if>
            <if test="sdTestexec!=null">
                #{sdTestexec},
            </if>
                now(),
        </trim>
        )
    </insert>
    <insert id="insertExmMedResult" useGeneratedKeys="true" keyProperty="idTestexecResult">
        INSERT INTO exm_med_result
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResult!=null">
                id_testexec_result,
            </if>
            <if test="idTestexec!=null">
                id_testexec,
            </if>
            <if test="serial!=null">
                serial,
            </if>
            <if test="fgFinalResult!=null">
                fg_final_result,
            </if>
            <if test="fgAsses!=null">
                fg_asses,
            </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResult!=null">
                #{idTestexecResult},
            </if>
            <if test="idTestexec!=null">
                #{idTestexec},
            </if>
            <if test="serial!=null">
                #{serial},
            </if>
            <if test="fgFinalResult!=null">
                #{fgFinalResult},
            </if>
            <if test="fgAsses!=null">
                #{fgAsses},
            </if>
        </trim>
        )
    </insert>
    <insert id="saveConsQa"  useGeneratedKeys="true" keyProperty="idTestexecResultInques">
        INSERT INTO exm_med_result_inques
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultInques!=null">
                id_testexec_result_inques,
            </if>
            <if test="idTestexecResult!=null">
                id_testexec_result,
            </if>
            <if test="idInques!=null">
                id_inques,
            </if>
            <if test="idMedCaseList!=null">
                id_med_case_list,
            </if>
                fg_clue,
                gmt_create,
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultInques!=null">
                #{idTestexecResultInques},
            </if>
            <if test="idTestexecResult!=null">
                #{idTestexecResult},
            </if>
            <if test="idInques!=null">
                #{idInques},
            </if>
            <if test="idMedCaseList!=null">
                #{idMedCaseList},
            </if>
                '0',
                now(),
        </trim>
        )
    </insert>
    <insert id="saveCheckQa"  useGeneratedKeys="true" keyProperty="idTestexecResultBody">
        INSERT INTO exm_med_result_body
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultBody!=null">
                id_testexec_result_body,
            </if>
            <if test="idTestexecResult!=null">
                id_testexec_result,
            </if>
            <if test="idBody!=null">
                id_body,
            </if>
            <if test="idMedCaseList!=null">
                id_med_case_list,
            </if>
                fg_clue,
                gmt_create,
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultBody!=null">
                #{idTestexecResultBody},
            </if>
            <if test="idTestexecResult!=null">
                #{idTestexecResult},
            </if>
            <if test="idBody!=null">
                #{idBody},
            </if>
            <if test="idMedCaseList!=null">
                #{idMedCaseList},
            </if>
                '0',
                now(),
        </trim>
        )
    </insert>
    <insert id="saveExamQa" useGeneratedKeys="true" keyProperty="idTestexecResultInspect">
        INSERT INTO exm_med_result_inspect
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultInspect!=null">
                id_testexec_result_inspect,
            </if>
            <if test="idTestexecResult!=null">
                id_testexec_result,
            </if>
            <if test="idMedCaseList!=null">
                id_med_case_list,
            </if>
                fg_clue,
                gmt_create,
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultInspect!=null">
                #{idTestexecResultInspect},
            </if>
            <if test="idTestexecResult!=null">
                #{idTestexecResult},
            </if>
            <if test="idMedCaseList!=null">
                #{idMedCaseList},
            </if>
                '0',
                now(),
        </trim>
        )
    </insert>
    <insert id="saveReferral" useGeneratedKeys="true" keyProperty="idTestexecResultReferral">
        INSERT INTO exm_med_result_referral
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultReferral!=null">
                id_testexec_result_referral,
            </if>
            <if test="idTestexecResult!=null">
                id_testexec_result,
            </if>
            <if test="sdEvaReferral!=null">
                sd_eva_referral,
            </if>
            <if test="idDie!=null">
                id_die,
            </if>
            <if test="reasonIn!=null">
                reason_in,
            </if>
                fg_exclude,
                gmt_create,
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultReferral!=null">
                #{idTestexecResultReferral},
            </if>
            <if test="idTestexecResult!=null">
                #{idTestexecResult},
            </if>
            <if test="sdEvaReferral!=null">
                #{sdEvaReferral},
            </if>
            <if test="idDie!=null">
                #{idDie},
            </if>
            <if test="reasonIn!=null">
                #{reasonIn},
            </if>
                '0',
                now(),
        </trim>
        )
    </insert>
    <insert id="saveOrder" useGeneratedKeys="true" keyProperty="idTestexecResultOrder">
        INSERT INTO exm_med_result_order
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultOrder!=null">
                id_testexec_result_order,
            </if>
            <if test="idTestexecResult!=null">
                id_testexec_result,
            </if>
            <if test="desCheck!=null and desCheck != ''">
                des_check,
            </if>
            <if test="sdNursRout!=null and sdNursRout != ''">
                sd_nurs_rout,
            </if>
            <if test="cdNursLevel!=null and cdNursLevel != ''">
                cd_nurs_level,
            </if>
            <if test="sdDiet!=null and sdDiet != ''">
                sd_diet,
            </if>
            <if test="sdPosition!=null and sdPosition != ''">
                sd_position,
            </if>
            <if test="desSpecial!=null and desSpecial != ''">
                des_special,
            </if>
            <if test="fgValid!=null and  fgValid!= ''">
                fg_valid,
            </if>
                gmt_create,
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultOrder!=null">
                #{idTestexecResultOrder},
            </if>
            <if test="idTestexecResult!=null">
                #{idTestexecResult},
            </if>
            <if test="desCheck!=null">
                #{desCheck},
            </if>
            <if test="sdNursRout!=null">
                #{sdNursRout},
            </if>
            <if test="cdNursLevel!=null">
                #{cdNursLevel},
            </if>
            <if test="sdDiet!=null">
                #{sdDiet},
            </if>
            <if test="sdPosition!=null">
                #{sdPosition},
            </if>
            <if test="desSpecial!=null">
                #{desSpecial},
            </if>
            <if test="fgValid!=null">
                #{fgValid},
            </if>
                now(),
        </trim>
        )
    </insert>
    <insert id="saveLongDrugs" useGeneratedKeys="true" keyProperty="idOrderLongDrugs">
        INSERT INTO exm_med_result_order_log_drugs
        (
            id_testexec_result_order,
            id_long_drugs
        )
        VALUES
        <foreach collection="list" item="item" separator="," >
                (#{extId}, #{item})
        </foreach>
    </insert>
    <insert id="saveShortDrugs">
        INSERT INTO exm_med_result_order_short_drugs
        (
            id_testexec_result_order,
            id_short_drugs
        )
        VALUES
        <foreach collection="list" item="item" separator="," >
            (#{extId}, #{item})
        </foreach>
    </insert>
    <update id="endExam">
        update
            exm_testexec
        set
            dt_exec_end=now(),
            duration=TIMESTAMPDIFF(SECOND, dt_exec_begin, now()),
            sd_testexec='2'
        where
            id_testexec = #{idTestexec}
    </update>
    <update id="updateConsStatus">
        update
            exm_med_result_inques
        set
            fg_clue=#{status}
        where
            id_testexec_result_inques  in (
        <foreach collection="list" item="item" separator="," >
            #{item}
        </foreach>
        )
    </update>
    <update id="updateCheckStatus">
        update
            exm_med_result_body
        set
            fg_clue=#{status}
        where
            id_testexec_result_body  in (
        <foreach collection="list" item="item" separator="," >
            #{item}
        </foreach>
        )
    </update>
    <update id="updateExamStatus">
        update
            exm_med_result_inspect
        set
            fg_clue=#{status}
        where
            id_testexec_result_inspect  in (
        <foreach collection="list" item="item" separator="," >
            #{item}
        </foreach>
        )
    </update>
    <update id="delConsQa">
        update exm_med_result_inques set fg_valid=#{fgValid} where id_testexec_result_inques = #{idTestexecResultInques}
    </update>
    <update id="outReferral">
        update
            exm_med_result_referral
        set
            fg_exclude = '1', reason_out = #{reasonOut}, gmt_modify = now()
        where
            id_testexec_result_referral = #{idTestexecResultReferral}
    </update>
    <update id="editOrder">
        UPDATE exm_med_result_order
        SET
            des_check = #{desCheck},
            sd_nurs_rout = #{sdNursRout},
            cd_nurs_level = #{cdNursLevel},
            sd_diet = #{sdDiet},
            sd_position = #{sdPosition},
            des_special = #{desSpecial}
        WHERE
            id_testexec_result_order = #{idTestexecResultOrder}
    </update>
    <delete id="delCheckQa">
        update exm_med_result_body set fg_valid=#{fgValid} where id_testexec_result_body = #{idTestexecResultBody}
    </delete>
    <delete id="delExamQa">
        update exm_med_result_inspect set fg_valid=#{fgValid} where id_testexec_result_inspect = #{idTestexecResultInspect}
    </delete>
    <delete id="delLongDrugs">
        update exm_med_result_order_log_drugs set fg_valid = '1' where id_order_long_drugs = #{id}
    </delete>
    <delete id="delShortDrugs">
        update exm_med_result_order_short_drugs set fg_valid = '1' where id_order_short_drugs = #{id}
    </delete>


    <select id="countWaitingRoom" resultType="java.lang.Long">
        SELECT
            count(1)
        FROM
            exm_testplan_detail a
        LEFT JOIN faq_med_tag b ON a.id_medicalrec = b.id_medicalrec
        LEFT JOIN bas_medical_tag c ON b.id_tag = c.id_tag AND c.cd_med_asse = '003'
        LEFT JOIN faq_med_case_patient d ON d.id_med_case = b.id_med_case
        LEFT JOIN user_info e ON a.id_student = e.user_id
        LEFT JOIN exm_testplan f ON a.id_testplan = f.id_testplan
        LEFT JOIN exm_testpaper g ON f.id_testpaper = g.id_testpaper
        WHERE
            a.sd_testplan_detail IN('0' , '1')
        AND f.id_org = #{idOrg}
        AND d.id_med_case IS NOT NULL
    </select>
    <select id="listWaitingRoom" resultType="com.sm.open.core.model.vo.pf.biz.test.PfTestWaitingRoomVo">
        SELECT
            a.id_testplan_detail,
            a.sd_testplan_detail as status,
            a.id_testplan ,
            a.id_student ,
            b.id_medicalrec,
            c.id_demo ,
            d.name as patName,
            d.sex as patSex,
            e.real_name as distributeDoc,
            f.na_testplan ,
            f.id_testpaper ,
            g.na_testpaper
        FROM
            exm_testplan_detail a
        LEFT JOIN faq_med_tag b ON a.id_medicalrec = b.id_medicalrec
        LEFT JOIN bas_medical_tag c ON b.id_tag = c.id_tag AND c.cd_med_asse = '003'
        LEFT JOIN faq_med_case_patient d ON d.id_med_case = b.id_med_case
        LEFT JOIN user_info e ON a.id_student = e.user_id
        LEFT JOIN exm_testplan f ON a.id_testplan = f.id_testplan
        LEFT JOIN exm_testpaper g ON f.id_testpaper = g.id_testpaper
        WHERE
            a.sd_testplan_detail IN('0' , '1')
        AND f.id_org = #{idOrg}
        AND d.id_med_case IS NOT NULL
        limit #{offset}, #{limit}
    </select>
    <select id="countReceivePat" resultType="java.lang.Long">

    </select>
    <select id="listReceivePat" resultType="com.sm.open.core.model.vo.pf.biz.test.PfTestReceivePatVo">

    </select>

    <select id="selectTestPaperInfo"
            resultType="com.sm.open.core.model.vo.pf.biz.test.paper.PfTestPaperInfoVo">
        select
            a.id_testexec, a.dt_exec_begin as beginTime, a.dt_exec_end as endTime, b.id_testexec_result
        from
            exm_testexec a
        left join exm_med_result b on a.id_testexec = b.id_testexec and b.serial = 1
        where
            id_testplan_detail = #{idTestplanDetail}
        and id_student=#{idStudent}
    </select>
    <select id="selectPatInfo" resultType="com.sm.open.core.model.vo.pf.biz.test.PfWaitingRoomPatVo">
        SELECT
            c.name ,
            c.sex ,
            c.age ,
            c.complaint
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        LEFT JOIN faq_med_case_patient c ON c.id_med_case = a.id_med_case
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = #{cdMedAsse}
    </select>
    <select id="selectPhotoInfo" resultType="com.sm.open.core.model.vo.pf.biz.test.PfWaitingRoomPatVo">
        SELECT
            a.id_med_case as ext
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = '005'
    </select>
    <select id="listTestCons" resultType="com.sm.open.core.model.entity.FaqMedCaseInquesList">
        SELECT
            c.id_med_case_list ,
            c.id_inques ,
            c.des_inques,
            IF(d.id_med_case_list is null,0,1) as extQa
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        LEFT JOIN faq_med_case_inques_list c ON c.id_med_case = a.id_med_case and c.fg_valid = '0'
        LEFT JOIN exm_med_result_inques d on c.id_med_case_list = d.id_med_case_list and d.fg_valid = '0'
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = #{cdMedAsse}
        order by
            c.id_med_case_list
    </select>
    <select id="listConsQa" resultType="com.sm.open.core.model.vo.pf.biz.test.PfWaitingRoomConsVo">
        SELECT
            a.id_testexec_result_inques , a.fg_clue ,
            b.des_inques , b.id_answer , b.des_answer , b.des_expert ,
            c.sd_type, c.path
        FROM
            exm_med_result_inques a
        LEFT JOIN faq_med_case_inques_list b ON a.id_med_case_list = b.id_med_case_list
        LEFT JOIN bas_media c on b.id_media = c.id_media
        WHERE
            a.id_testexec_result = #{idTestexecResult}
        and a.fg_valid = '0'
        order by
            b.id_med_case_list
    </select>
    <select id="isExistConsQa" resultType="java.lang.Long">
        select
            id_testexec_result_inques
        from
            exm_med_result_inques
        where
            id_testexec_result = #{idTestexecResult}
        and id_med_case_list = #{idMedCaseList}
    </select>

    <select id="selectPic" resultType="java.lang.Long">
        SELECT
           a.id_med_case
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        WHERE
             a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = #{cdMedAsse}
        limit 1
    </select>

    <select id="listTestCheck" resultType="com.sm.open.core.model.entity.FaqMedCaseBodyList">
        SELECT
            c.id_med_case_list ,
            c.des_body ,
            c.id_body ,
            c.cd_check ,
            e.name AS cdCheckText ,
            IF(d.id_med_case_list IS NULL , 0 , 1) AS extQa
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        LEFT JOIN faq_med_case_body_list c ON c.id_med_case = a.id_med_case AND c.fg_valid = '0'
        LEFT JOIN bas_body_ca e ON c.id_body_ca = e.id_body_ca
        LEFT JOIN exm_med_result_body d ON c.id_med_case_list = d.id_med_case_list AND d.fg_valid = '0'
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = #{cdMedAsse}
        <if test="sdBody != null and sdBody != ''">
            AND c.sd_body = #{sdBody}
        </if>
        ORDER BY
            c.id_med_case_list
    </select>
    <select id="isExistCheckQa" resultType="java.lang.Long">
        select
            id_testexec_result_body
        from
            exm_med_result_body
        where
            id_testexec_result = #{idTestexecResult}
        and id_med_case_list = #{idMedCaseList}
    </select>
    <select id="listTestExam" resultType="com.sm.open.core.model.entity.FaqMedCaseInspectList">
        SELECT
            c.id_med_case_list ,
	        c.na_item,
            IF(d.id_med_case_list is null,0,1) as extQa
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        LEFT JOIN faq_med_case_inspect_list c ON c.id_med_case = a.id_med_case and c.fg_valid = '0'
        LEFT JOIN exm_med_result_inspect d on c.id_med_case_list = d.id_med_case_list and d.fg_valid = '0'
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = #{cdMedAsse}
        order by
            c.id_med_case_list
    </select>
    <select id="isExistExamQa" resultType="java.lang.Long">
        select
            id_testexec_result_inspect
        from
            exm_med_result_inspect
        where
            id_testexec_result = #{idTestexecResult}
        and id_med_case_list = #{idMedCaseList}
    </select>
    <select id="listCheckQa" resultType="com.sm.open.core.model.vo.pf.biz.test.PfWaitingRoomCheckVo">
        SELECT
            a.id_testexec_result_body , a.fg_clue ,
            b.des_body , b.id_result , b.des_result , b.des_expert ,
            c.sd_type, c.path
        FROM
            exm_med_result_body a
        LEFT JOIN faq_med_case_body_list b ON a.id_med_case_list = b.id_med_case_list
        LEFT JOIN bas_media c on b.id_media = c.id_media
        WHERE
            a.id_testexec_result = #{idTestexecResult}
        and a.fg_valid = '0'
        order by
            b.id_med_case_list
    </select>
    <select id="listExamQa" resultType="com.sm.open.core.model.vo.pf.biz.test.PfWaitingRoomExamVo">
        SELECT
            a.id_testexec_result_inspect , a.fg_clue ,
            b.na_item , b.id_result , b.val_result , b.des_expert ,
            c.sd_type, c.path
        FROM
            exm_med_result_inspect a
        LEFT JOIN faq_med_case_inspect_list b ON a.id_med_case_list = b.id_med_case_list
        LEFT JOIN bas_media c on b.id_media = c.id_media
        WHERE
            a.id_testexec_result = #{idTestexecResult}
        and a.fg_valid = '0'
        order by
            b.id_med_case_list
    </select>
    <select id="listReferral" resultType="com.sm.open.core.model.entity.ExmMedResultReferral">
        SELECT
            a.id_testexec_result_referral, a.id_testexec_result, a.sd_eva_referral, 
            a.id_die, a.reason_in, a.fg_exclude, a.reason_out, a.fg_valid, a.gmt_create, a.gmt_modify,
            b.name as idDieText
        FROM
            exm_med_result_referral a
        LEFT JOIN bas_die b ON a.id_die = b.id_die
        WHERE
            a.id_testexec_result = #{idTestexecResult}
        and a.fg_valid = '0'
    </select>
    <select id="selectOrders" resultType="com.sm.open.core.model.entity.ExmMedResultOrder">
        SELECT
            id_testexec_result_order ,
            id_testexec_result ,
            des_check ,
            sd_nurs_rout ,
            cd_nurs_level ,
            sd_diet ,
            sd_position ,
            des_special ,
            fg_valid ,
            gmt_create
        FROM
            exm_med_result_order
        WHERE
            fg_valid = '0'
        LIMIT 1
    </select>
    <select id="listLongDrugs" resultType="com.sm.open.core.model.entity.ExmMedResultOrderLogDrugs">
        SELECT
            a.id_order_long_drugs, a.id_testexec_result_order, a.id_long_drugs, a.fg_valid, b.name as idLongDrugsText
        FROM
            exm_med_result_order_log_drugs a
        LEFT JOIN bas_drugs b on a.id_long_drugs = b.id_drugs
        WHERE
            a.fg_valid = '0'
        and a.id_testexec_result_order = #{idTestexecResultOrder}
    </select>
    <select id="listShortDrugs" resultType="com.sm.open.core.model.entity.ExmMedResultOrderShortDrugs">
        SELECT
            a.id_order_short_drugs, a.id_testexec_result_order, a.id_short_drugs, a.fg_valid, b.name as idShortDrugsText
        FROM
            exm_med_result_order_short_drugs a
        LEFT JOIN bas_drugs b on a.id_short_drugs = b.id_drugs
        WHERE
            a.fg_valid = '0'
        and a.id_testexec_result_order = #{idTestexecResultOrder}
    </select>

</mapper>