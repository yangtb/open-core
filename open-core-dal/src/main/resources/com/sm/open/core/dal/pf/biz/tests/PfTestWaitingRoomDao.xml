<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sm.open.core.dal.pf.biz.tests.PfTestWaitingRoomDao">
    <insert id="startExam" useGeneratedKeys="true" keyProperty="idTestexec">
        INSERT INTO exm_testexec
        (
        <trim suffixOverrides=",">
            <if test="idTestexec!=null">
                id_testexec,
            </if>
            <if test="idTestplanDetail!=null">
                id_testplan_detail,
            </if>
            <if test="idStudent!=null">
                id_student,
            </if>
            <if test="idMedicalrec!=null">
                id_medicalrec,
            </if>
            <if test="sort!=null">
                sort,
            </if>
            <if test="idOrg!=null">
                id_org,
            </if>
            <if test="sdTestexec!=null">
                sd_testexec,
            </if>
                dt_exec_begin,
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="idTestexec!=null">
                #{idTestexec},
            </if>
            <if test="idTestplanDetail!=null">
                #{idTestplanDetail},
            </if>
            <if test="idStudent!=null">
                #{idStudent},
            </if>
            <if test="idMedicalrec!=null">
                #{idMedicalrec},
            </if>
            <if test="sort!=null">
                #{sort},
            </if>
            <if test="idOrg!=null">
                #{idOrg},
            </if>
            <if test="sdTestexec!=null">
                #{sdTestexec},
            </if>
                now(),
        </trim>
        )
    </insert>
    <insert id="insertExmMedResult" useGeneratedKeys="true" keyProperty="idTestexecResult">
        INSERT INTO exm_med_result
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResult!=null">
                id_testexec_result,
            </if>
            <if test="idTestexec!=null">
                id_testexec,
            </if>
            <if test="serial!=null">
                serial,
            </if>
            <if test="fgFinalResult!=null">
                fg_final_result,
            </if>
            <if test="fgAsses!=null">
                fg_asses,
            </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResult!=null">
                #{idTestexecResult},
            </if>
            <if test="idTestexec!=null">
                #{idTestexec},
            </if>
            <if test="serial!=null">
                #{serial},
            </if>
            <if test="fgFinalResult!=null">
                #{fgFinalResult},
            </if>
            <if test="fgAsses!=null">
                #{fgAsses},
            </if>
        </trim>
        )
    </insert>
    <insert id="saveConsQa"  useGeneratedKeys="true" keyProperty="idTestexecResultInques">
        INSERT INTO exm_med_result_inques
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultInques!=null">
                id_testexec_result_inques,
            </if>
            <if test="idTestexecResult!=null">
                id_testexec_result,
            </if>
            <if test="idInques!=null">
                id_inques,
            </if>
            <if test="idMedCaseList!=null">
                id_med_case_list,
            </if>
                fg_clue,
                gmt_create,
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultInques!=null">
                #{idTestexecResultInques},
            </if>
            <if test="idTestexecResult!=null">
                #{idTestexecResult},
            </if>
            <if test="idInques!=null">
                #{idInques},
            </if>
            <if test="idMedCaseList!=null">
                #{idMedCaseList},
            </if>
                '0',
                now(),
        </trim>
        )
    </insert>
    <insert id="saveCheckQa"  useGeneratedKeys="true" keyProperty="idTestexecResultBody">
        INSERT INTO exm_med_result_body
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultBody!=null">
                id_testexec_result_body,
            </if>
            <if test="idTestexecResult!=null">
                id_testexec_result,
            </if>
            <if test="idBody!=null">
                id_body,
            </if>
            <if test="idMedCaseList!=null">
                id_med_case_list,
            </if>
                fg_clue,
                gmt_create,
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultBody!=null">
                #{idTestexecResultBody},
            </if>
            <if test="idTestexecResult!=null">
                #{idTestexecResult},
            </if>
            <if test="idBody!=null">
                #{idBody},
            </if>
            <if test="idMedCaseList!=null">
                #{idMedCaseList},
            </if>
                '0',
                now(),
        </trim>
        )
    </insert>
    <insert id="saveExamQa" useGeneratedKeys="true" keyProperty="idTestexecResultInspect">
        INSERT INTO exm_med_result_inspect
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultInspect!=null">
                id_testexec_result_inspect,
            </if>
            <if test="idTestexecResult!=null">
                id_testexec_result,
            </if>
            <if test="idMedCaseList!=null">
                id_med_case_list,
            </if>
            <if test="idInspectItem!=null">
                id_inspect_item,
            </if>
            <if test="idDie!=null">
                id_die,
            </if>
                fg_clue,
                gmt_create,
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultInspect!=null">
                #{idTestexecResultInspect},
            </if>
            <if test="idTestexecResult!=null">
                #{idTestexecResult},
            </if>
            <if test="idMedCaseList!=null">
                #{idMedCaseList},
            </if>
            <if test="idInspectItem!=null">
                #{idInspectItem},
            </if>
            <if test="idDie!=null">
                #{idDie},
            </if>
                '0',
                now(),
        </trim>
        )
    </insert>
    <insert id="saveReferral" useGeneratedKeys="true" keyProperty="idTestexecResultReferral">
        INSERT INTO exm_med_result_referral
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultReferral!=null">
                id_testexec_result_referral,
            </if>
            <if test="idTestexecResult!=null">
                id_testexec_result,
            </if>
            <if test="idDie!=null">
                id_die,
            </if>
                fg_die_class,
                fg_exclude,
                gmt_create,
                gmt_modify
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultReferral!=null">
                #{idTestexecResultReferral},
            </if>
            <if test="idTestexecResult!=null">
                #{idTestexecResult},
            </if>
            <if test="idDie!=null">
                #{idDie},
            </if>
                #{fgDieClass},
                '0', now(), now()
        </trim>
        )
    </insert>
    <insert id="saveOrder" useGeneratedKeys="true" keyProperty="idTestexecResultOrder">
        INSERT INTO exm_med_result_order
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultOrder!=null">
                id_testexec_result_order,
            </if>
            <if test="idTestexecResult!=null">
                id_testexec_result,
            </if>
            <if test="desCheck!=null and desCheck != ''">
                des_check,
            </if>
            <if test="sdNursRout!=null and sdNursRout != ''">
                sd_nurs_rout,
            </if>
            <if test="cdNursLevel!=null and cdNursLevel != ''">
                cd_nurs_level,
            </if>
            <if test="sdDiet!=null and sdDiet != ''">
                sd_diet,
            </if>
            <if test="sdPosition!=null and sdPosition != ''">
                sd_position,
            </if>
            <if test="desSpecial!=null and desSpecial != ''">
                des_special,
            </if>
            <if test="fgValid!=null and fgValid!= ''">
                fg_valid,
            </if>
                gmt_create,
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultOrder!=null">
                #{idTestexecResultOrder},
            </if>
            <if test="idTestexecResult!=null">
                #{idTestexecResult},
            </if>
            <if test="desCheck!=null and desCheck != ''">
                #{desCheck},
            </if>
            <if test="sdNursRout!=null and sdNursRout != ''">
                #{sdNursRout},
            </if>
            <if test="cdNursLevel!=null and cdNursLevel != ''">
                #{cdNursLevel},
            </if>
            <if test="sdDiet!=null and sdDiet != ''">
                #{sdDiet},
            </if>
            <if test="sdPosition!=null and sdPosition != ''">
                #{sdPosition},
            </if>
            <if test="desSpecial!=null and desSpecial != ''">
                #{desSpecial},
            </if>
            <if test="fgValid!=null and fgValid != ''">
                #{fgValid},
            </if>
                now(),
        </trim>
        )
    </insert>
    <insert id="saveLongDrugs" useGeneratedKeys="true" keyProperty="idOrderLongDrugs">
        INSERT INTO exm_med_result_order_log_drugs
        (
            id_testexec_result_order,
            id_long_drugs
        )
        VALUES
        <foreach collection="list" item="item" separator="," >
                (#{extId}, #{item})
        </foreach>
    </insert>
    <insert id="saveShortDrugs">
        INSERT INTO exm_med_result_order_short_drugs
        (
            id_testexec_result_order,
            id_short_drugs
        )
        VALUES
        <foreach collection="list" item="item" separator="," >
            (#{extId}, #{item})
        </foreach>
    </insert>
    <insert id="addDiagnosis"  useGeneratedKeys="true" keyProperty="idTestexecResultDiagnosis">
        INSERT INTO exm_med_result_diagnosis
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultDiagnosis!=null">
                id_testexec_result_diagnosis,
            </if>
            <if test="idTestexecResult!=null">
                id_testexec_result,
            </if>
            <if test="idDie!=null">
                id_die,
            </if>
            <if test="idTestexecResultReferral!=null">
                id_testexec_result_referral,
            </if>
            <if test="desDieReason!=null">
                des_die_reason,
            </if>
                gmt_create,
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultDiagnosis!=null">
                #{idTestexecResultDiagnosis},
            </if>
            <if test="idTestexecResult!=null">
                #{idTestexecResult},
            </if>
            <if test="idDie!=null">
                #{idDie},
            </if>
            <if test="idTestexecResultReferral!=null">
                #{idTestexecResultReferral},
            </if>
            <if test="desDieReason!=null">
                #{desDieReason},
            </if>
                now(),
        </trim>
        )
    </insert>
    <insert id="addSummary" useGeneratedKeys="true" keyProperty="idTestexecResultSumary">
        INSERT INTO exm_med_result_summary
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultSumary!=null">
                id_testexec_result_sumary,
            </if>
            <if test="idTestexecResult!=null">
                id_testexec_result,
            </if>
            <if test="dieSumary!=null">
                die_sumary,
            </if>
            <if test="desConditionHpi!=null">
                des_condition_hpi,
            </if>
            <if test="desConditionPe!=null">
                des_condition_pe,
            </if>
            <if test="desConditionFe!=null">
                des_condition_fe,
            </if>
            <if test="desSumaryHpi!=null">
                des_sumary_hpi,
            </if>
            <if test="desSumaryPe!=null">
                des_sumary_pe,
            </if>
            <if test="desSumaryFe!=null">
                des_sumary_fe,
            </if>
                gmt_create,
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultSumary!=null">
                #{idTestexecResultSumary},
            </if>
            <if test="idTestexecResult!=null">
                #{idTestexecResult},
            </if>
            <if test="dieSumary!=null">
                #{dieSumary},
            </if>
            <if test="desConditionHpi!=null">
                #{desConditionHpi},
            </if>
            <if test="desConditionPe!=null">
                #{desConditionPe},
            </if>
            <if test="desConditionFe!=null">
                #{desConditionFe},
            </if>
            <if test="desSumaryHpi!=null">
                #{desSumaryHpi},
            </if>
            <if test="desSumaryPe!=null">
                #{desSumaryPe},
            </if>
            <if test="desSumaryFe!=null">
                #{desSumaryFe},
            </if>
                now(),
        </trim>
        )
    </insert>
    <insert id="saveDieReason">
        INSERT INTO exm_med_result_die_reason
        (
            id_testexec_result_diagnosis,
            sd_eva_effciency,
            id_med_case_list,
            id_inques,
            id_body,
            id_inspect_item,
            gmt_create
        )
        VALUES
        <foreach collection="list" item="item" separator="," >
            (
                #{item.idTestexecResultDiagnosis},
                #{item.sdEvaEffciency},
                #{item.idMedCaseList},
                <choose>
                    <when test="item.idInques!=null">
                        #{item.idInques},
                    </when>
                    <otherwise>
                        null,
                    </otherwise>
                </choose>
                <choose>
                    <when test="item.idBody!=null">
                        #{item.idBody},
                    </when>
                    <otherwise>
                        null,
                    </otherwise>
                </choose>
                <choose>
                    <when test="item.idInspectItem!=null">
                        #{item.idInspectItem},
                    </when>
                    <otherwise>
                        null,
                    </otherwise>
                </choose>
                now()
            )
        </foreach>
    </insert>
    <insert id="saveQzDieReason">
        INSERT INTO exm_med_result_die_reason
        (
            id_testexec_result_diagnosis,
            sd_eva_effciency,
            id_med_case_list,
            id_inques,
            id_body,
            id_inspect_item,
            gmt_create
        )
        SELECT
            #{idTestexecResultDiagnosis} ,
            b.sd_eva_effciency ,
            b.id_med_case_list ,
            b.id_inques ,
            b.id_body ,
            b.id_inspect_item ,
            now()
        FROM
            exm_med_result_referral_reason b
        WHERE
            b.id_testexec_result_referral = #{idTestexecResultReferral}
    </insert>
    <insert id="saveReferralReason">
        INSERT INTO exm_med_result_referral_reason(
            id_testexec_result_referral ,
            fg_exclude ,
            sd_eva_effciency ,
            id_inques ,
            id_body ,
            id_inspect_item ,
            id_med_case_list ,
            fg_valid ,
            gmt_create
        )
        VALUES
        <foreach collection="list" item="item" separator="," >
            (
            #{item.idTestexecResultReferral},
            #{item.fgExclude},
            #{item.sdEvaEffciency},
            <choose>
                <when test="item.idInques!=null">
                    #{item.idInques},
                </when>
                <otherwise>
                    null,
                </otherwise>
            </choose>
            <choose>
                <when test="item.idBody!=null">
                    #{item.idBody},
                </when>
                <otherwise>
                    null,
                </otherwise>
            </choose>
            <choose>
                <when test="item.idInspectItem!=null">
                    #{item.idInspectItem},
                </when>
                <otherwise>
                    null,
                </otherwise>
            </choose>
            #{item.idMedCaseList},
            '0',
            now()
            )
        </foreach>
    </insert>
    <insert id="insertExmMedResultIdentify"  useGeneratedKeys="true" keyProperty="idTestexecResultIdentify">
        INSERT INTO exm_med_result_identify
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultIdentify!=null">
                id_testexec_result_identify,
            </if>
            <if test="idTestexecResult!=null">
                id_testexec_result,
            </if>
            <if test="naDie!=null">
                na_die,
            </if>
            <if test="desDieReason!=null">
                des_die_reason,
            </if>
                gmt_create,
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="idTestexecResultIdentify!=null">
                #{idTestexecResultIdentify},
            </if>
            <if test="idTestexecResult!=null">
                #{idTestexecResult},
            </if>
            <if test="naDie!=null">
                #{naDie},
            </if>
            <if test="desDieReason!=null">
                #{desDieReason},
            </if>
                now(),
        </trim>
        )
    </insert>
    <insert id="insertExmMedResultIdentifyReason"  useGeneratedKeys="true" keyProperty="idIdentifyReason">
        INSERT INTO exm_med_result_identify_reason
        (
        <trim suffixOverrides=",">
            <if test="idIdentifyReason!=null">
                id_identify_reason,
            </if>
            <if test="idTestexecResultIdentify!=null">
                id_testexec_result_identify,
            </if>
            <if test="sdEvaEffciency!=null">
                sd_eva_effciency,
            </if>
            <if test="idInques!=null">
                id_inques,
            </if>
            <if test="idBody!=null">
                id_body,
            </if>
            <if test="idInspectItem!=null">
                id_inspect_item,
            </if>
            <if test="idMedCaseList!=null">
                id_med_case_list,
            </if>
            <if test="fgValid!=null">
                fg_valid,
            </if>
                gmt_create,
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="idIdentifyReason!=null">
                #{idIdentifyReason},
            </if>
            <if test="idTestexecResultIdentify!=null">
                #{idTestexecResultIdentify},
            </if>
            <if test="sdEvaEffciency!=null">
                #{sdEvaEffciency},
            </if>
            <if test="idInques!=null">
                #{idInques},
            </if>
            <if test="idBody!=null">
                #{idBody},
            </if>
            <if test="idInspectItem!=null">
                #{idInspectItem},
            </if>
            <if test="idMedCaseList!=null">
                #{idMedCaseList},
            </if>
            <if test="fgValid!=null">
                #{fgValid},
            </if>
                now(),
        </trim>
        )
    </insert>
    <update id="endExam">
        update
            exm_testexec
        set
            dt_exec_end=now(),
            duration=TIMESTAMPDIFF(SECOND, dt_exec_begin, now()),
            sd_testexec='2'
        where
            id_testexec = #{idTestexec}
    </update>
    <update id="updateConsStatus">
        update
            exm_med_result_inques
        set
            fg_clue=#{status}
        where
            id_testexec_result_inques  in (
        <foreach collection="list" item="item" separator="," >
            #{item}
        </foreach>
        )
    </update>
    <update id="updateCheckStatusByIdTestexecResult">
        update
            exm_med_result_body
        set
            fg_clue='0'
        where
            id_testexec_result = #{idTestexecResult}
        <if test="operationType == '1'.toString()">
            AND (id_die not LIKE '%,%' or id_die is null)
        </if>
        <if test="operationType == '2'.toString()">
            and id_die LIKE '%,%'
        </if>
    </update>
    <update id="updateCheckStatus">
        update
            exm_med_result_body
        set
            fg_clue=#{status}
        where
            id_testexec_result_body  in (
        <foreach collection="list" item="item" separator="," >
            #{item}
        </foreach>
        )
    </update>
    <update id="updateExamStatusByIdTestexecResult">
        update
            exm_med_result_inspect
        set
            fg_clue='0'
        where
            id_testexec_result = #{idTestexecResult}
        <if test="operationType == '1'.toString()">
            and (id_die not LIKE '%,%' or id_die is null)
        </if>
        <if test="operationType == '2'.toString()">
            and id_die LIKE '%,%'
        </if>
    </update>
    <update id="updateExamStatus">
        update
            exm_med_result_inspect
        set
            fg_clue=#{status}
        where
            id_testexec_result_inspect  in (
        <foreach collection="list" item="item" separator="," >
            #{item}
        </foreach>
        )
    </update>
    <update id="delConsQa">
        update exm_med_result_inques
        set fg_valid=#{fgValid},
            gmt_create=now()
        where id_testexec_result_inques = #{idTestexecResultInques}
    </update>
    <update id="outReferral">
        update
            exm_med_result_referral
        set
            fg_exclude = '1',  gmt_modify = now()
        where
            id_testexec_result_referral = #{idTestexecResultReferral}
    </update>
    <update id="editOrder">
        UPDATE exm_med_result_order
        SET
            des_check = #{desCheck},
            sd_nurs_rout = #{sdNursRout},
            cd_nurs_level = #{cdNursLevel},
            sd_diet = #{sdDiet},
            sd_position = #{sdPosition},
            des_special = #{desSpecial}
        WHERE
            id_testexec_result_order = #{idTestexecResultOrder}
    </update>
    <update id="editDiagnosis">
        UPDATE exm_med_result_diagnosis
        SET
        <trim suffixOverrides=",">
            <if test="idDie!=null">
                id_die = #{idDie},
            </if>
            <if test="idTestexecResultReferral!=null">
                id_testexec_result_referral = #{idTestexecResultReferral},
            </if>
            <if test="desDieReason!=null">
                des_die_reason = #{desDieReason},
            </if>
        </trim>
        WHERE
            id_testexec_result_diagnosis = #{idTestexecResultDiagnosis}
    </update>
    <update id="editSummary">
        UPDATE exm_med_result_summary
        SET
        <trim suffixOverrides=",">
            <if test="dieSumary != null">
                die_sumary = #{dieSumary},
            </if>
            <if test="desConditionHpi != null">
                des_condition_hpi = #{desConditionHpi},
            </if>
            <if test="desConditionPe != null">
                des_condition_pe = #{desConditionPe},
            </if>
            <if test="desConditionFe != null">
                des_condition_fe = #{desConditionFe},
            </if>
            <if test="desSumaryHpi != null">
                des_sumary_hpi = #{desSumaryHpi},
            </if>
            <if test="desSumaryPe != null">
                des_sumary_pe = #{desSumaryPe},
            </if>
            <if test="desSumaryFe != null">
                des_sumary_fe = #{desSumaryFe},
            </if>
        </trim>
        WHERE
            id_testexec_result_sumary = #{idTestexecResultSumary}
    </update>
    <update id="editExamQa">
        update
            exm_med_result_inspect
        set
        <trim suffixOverrides=",">
            <choose>
                <when test="idTestexecResultInspect == null">
                    id_die = #{idDie},
                </when>
                <otherwise>
                    <if test="desReply != null and desReply != ''">
                        des_reply = #{desReply},
                    </if>
                    <if test="fgValid != null and fgValid != ''">
                        fg_valid=#{fgValid},
                    </if>
                </otherwise>
            </choose>
        </trim>
        where
        <choose>
            <when test="idTestexecResultInspect != null">
                id_testexec_result_inspect = #{idTestexecResultInspect}
            </when>
            <otherwise>
                id_testexec_result = #{idTestexecResult}
                and id_med_case_list = #{idMedCaseList}
            </otherwise>
        </choose>
        and fg_valid = '0'
    </update>
    <update id="editCheckQa">
        update
            exm_med_result_body
        set
        <trim suffixOverrides=",">
            <choose>
                <when test="idTestexecResultBody == null">
                    id_die = #{idDie},
                </when>
                <otherwise>
                    <if test="desReply != null and desReply != ''">
                        des_reply = #{desReply},
                    </if>
                    <if test="fgValid != null and fgValid != ''">
                        fg_valid=#{fgValid},
                    </if>
                </otherwise>
            </choose>
        </trim>
        where
        <choose>
            <when test="idTestexecResultBody != null">
                id_testexec_result_body = #{idTestexecResultBody}
            </when>
            <otherwise>
                id_testexec_result = #{idTestexecResult}
                and id_med_case_list = #{idMedCaseList}
            </otherwise>
        </choose>
        and fg_valid = '0'
    </update>
    <update id="editEva">
        update exm_eva_dimension
        set score_dimemsion = #{scoreDimemsion},
            weight_score_dimemsion = ROUND(score_dimemsion * weight_dimemsion/100,2)
        where id_testexec_result_dimension = #{idTestexecResultDimension}
    </update>
    <update id="updateExmMedResultFlag">
        update exm_med_result set fg_asses = '1' where id_testexec_result = #{idTestexecResult}
    </update>
    <update id="updateQzFlag">
        update exm_med_result_diagnosis set fg_valid = '1' where id_testexec_result_referral=#{idTestexecResultReferral}
    </update>
    <update id="saveExecSerialNo">
        update exm_testexec set cur_serialno = #{curSerialno} where id_testexec = #{idTestexec}
    </update>
    <update id="editConsQa">
        update exm_med_result_inques
        set
        <trim suffixOverrides=",">
            <if test="desReason != null and desReason != ''">
                des_reason = #{desReason},
            </if>
            <if test="desReply != null and desReply != ''">
                des_reply = #{desReply},
            </if>
        </trim>
        where id_testexec_result_inques = #{idTestexecResultInques}
    </update>
    <update id="updateExmMedResultIdentify">
        UPDATE exm_med_result_identify
        SET
        <trim suffixOverrides=",">
            <if test="idTestexecResult != null">
                id_testexec_result = #{idTestexecResult},
            </if>
            <if test="naDie != null and naDie!=''">
                na_die = #{naDie},
            </if>
            <if test="desDieReason != null and desDieReason!=''">
                des_die_reason = #{desDieReason},
            </if>
            <if test="fgValid != null and fgValid!=''">
                fg_valid = #{fgValid},
            </if>
        </trim>
        WHERE
            id_testexec_result_identify = #{idTestexecResultIdentify}
    </update>
    <update id="updateExmMedResultIdentifyReason">
        UPDATE exm_med_result_identify_reason
        SET
        <trim suffixOverrides=",">
            <if test="idTestexecResultIdentify != null">
                id_testexec_result_identify = #{idTestexecResultIdentify},
            </if>
            <if test="sdEvaEffciency != null and sdEvaEffciency!=''">
                sd_eva_effciency = #{sdEvaEffciency},
            </if>
            <if test="idInques != null">
                id_inques = #{idInques},
            </if>
            <if test="idBody != null">
                id_body = #{idBody},
            </if>
            <if test="idInspectItem != null">
                id_inspect_item = #{idInspectItem},
            </if>
            <if test="idMedCaseList != null">
                id_med_case_list = #{idMedCaseList},
            </if>
            <if test="fgValid != null and fgValid!=''">
                fg_valid = #{fgValid},
            </if>
        </trim>
        WHERE
            id_identify_reason = #{idIdentifyReason}
    </update>
    <delete id="delCheckQa">
        update exm_med_result_body
        set
            <if test="idDie != null">
                id_die = #{idDie},
            </if>
            fg_valid=#{fgValid},
            gmt_create=now()
        where id_testexec_result_body = #{idTestexecResultBody}
    </delete>
    <delete id="delExamQa">
        update exm_med_result_inspect
        set
            <if test="idDie != null">
                id_die = #{idDie},
            </if>
            fg_valid=#{fgValid},
            gmt_create=now()
        where id_testexec_result_inspect = #{idTestexecResultInspect}
    </delete>
    <delete id="delLongDrugs">
        update exm_med_result_order_log_drugs set fg_valid = '1' where id_order_long_drugs = #{id}
    </delete>
    <delete id="delShortDrugs">
        update exm_med_result_order_short_drugs set fg_valid = '1' where id_order_short_drugs = #{id}
    </delete>
    <delete id="delDiagnosis">
        update exm_med_result_diagnosis set fg_valid = '1' where id_testexec_result_diagnosis = #{idTestexecResultDiagnosis}
    </delete>
    <delete id="delDieReason">
        update exm_med_result_die_reason set fg_valid = '1' where id_die_reason = #{idDieReason}
    </delete>
    <delete id="delDieReasonByResultId">
        update exm_med_result_die_reason set fg_valid = '1' where id_testexec_result_diagnosis = #{idTestexecResultDiagnosis}
    </delete>
    <delete id="delQzDieReason">
        delete from exm_med_result_die_reason where id_testexec_result_diagnosis = #{idTestexecResultDiagnosis}
    </delete>
    <delete id="delPlanDetail">
        delete from exm_testplan_detail
        WHERE
        id_testplan_detail in (
        <foreach collection="list" item="item" separator="," >
            #{item}
        </foreach>
        )
    </delete>
    <delete id="delExamQaByIdTestexecResult">
        delete from exm_med_result_inspect
        where id_testexec_result = #{idTestexecResult}
        and id_inspect_item in (
        <foreach collection="list" item="item" separator="," >
            #{item}
        </foreach>
        )
    </delete>
    <delete id="delExmMedResultIdentifyReason">
        delete from exm_med_result_identify_reason where id_testexec_result_identify = #{idTestexecResultIdentify}
    </delete>

    <select id="countWaitingRoom" resultType="java.lang.Long">
        SELECT
            count(1)
        FROM
            exm_testplan_detail a
        LEFT JOIN faq_med_tag b ON a.id_medicalrec = b.id_medicalrec
        LEFT JOIN faq_med_case c ON b.id_med_case = c.id_med_case
        inner JOIN faq_med_case_patient d ON d.id_med_case = b.id_med_case AND c.cd_med_asse = '003'
        LEFT JOIN user_info e ON a.id_student = e.user_id
        LEFT JOIN exm_testplan f ON a.id_testplan = f.id_testplan
        LEFT JOIN exm_testpaper g ON f.id_testpaper = g.id_testpaper
        LEFT JOIN faq_medicalrec k ON a.id_medicalrec = k.id_medicalrec
        WHERE
            a.sd_testplan_detail IN('0' , '1')
        AND f.id_org = #{idOrg}
        <if test="medicalrecName != null and medicalrecName != ''">
            and k.name like concat(#{medicalrecName},'%')
        </if>
        <if test="naTestplan != null and naTestplan != ''">
            and f.na_testplan like concat(#{naTestplan},'%')
        </if>
        <if test="naTestpaper != null and naTestpaper != ''">
            and g.na_testpaper like concat(#{naTestpaper},'%')
        </if>
        <if test="currentUserId != null">
            and a.id_student = #{currentUserId}
        </if>
    </select>
    <select id="listWaitingRoom" resultType="com.sm.open.core.model.vo.pf.biz.test.PfTestWaitingRoomVo">
        SELECT
            a.id_testplan_detail,
            a.sd_testplan_detail as status,
            a.id_testplan ,
            a.id_student ,
            b.id_medicalrec,
            k.id_demo ,
            d.id_med_case as idMedCase,
            d.name as patName,
            d.sex as patSex,
            d.age as patAge,
            d.complaint as complaint,
            e.real_name as distributeDoc,
            f.na_testplan ,
            f.id_testpaper ,
            g.na_testpaper
        FROM
            exm_testplan_detail a
        LEFT JOIN faq_med_tag b ON a.id_medicalrec = b.id_medicalrec
        LEFT JOIN faq_med_case c ON b.id_med_case = c.id_med_case
        inner JOIN faq_med_case_patient d ON d.id_med_case = b.id_med_case AND c.cd_med_asse = '003'
        LEFT JOIN user_info e ON a.id_student = e.user_id
        LEFT JOIN exm_testplan f ON a.id_testplan = f.id_testplan
        LEFT JOIN exm_testpaper g ON f.id_testpaper = g.id_testpaper
        LEFT JOIN faq_medicalrec k ON a.id_medicalrec = k.id_medicalrec
        WHERE
            a.sd_testplan_detail IN('0' , '1')
        AND f.id_org = #{idOrg}
        <if test="medicalrecName != null and medicalrecName != ''">
            and k.name like concat(#{medicalrecName},'%')
        </if>
        <if test="naTestplan != null and naTestplan != ''">
            and f.na_testplan like concat(#{naTestplan},'%')
        </if>
        <if test="naTestpaper != null and naTestpaper != ''">
            and g.na_testpaper like concat(#{naTestpaper},'%')
        </if>
        <if test="currentUserId != null">
            and a.id_student = #{currentUserId}
        </if>
        limit #{offset}, #{limit}
    </select>
    <select id="countReceivePat" resultType="java.lang.Long">
        SELECT
            count(1)
        FROM
            exm_testexec m
        LEFT JOIN exm_testplan_detail a ON m.id_testplan_detail = a.id_testplan_detail
        LEFT JOIN faq_med_tag b ON a.id_medicalrec = b.id_medicalrec
        LEFT JOIN faq_med_case c ON b.id_med_case = c.id_med_case
        inner JOIN faq_med_case_patient d ON d.id_med_case = b.id_med_case AND c.cd_med_asse = '003'
        LEFT JOIN user_info e ON a.id_student = e.user_id
        LEFT JOIN exm_testplan f ON a.id_testplan = f.id_testplan
        LEFT JOIN exm_testpaper g ON f.id_testpaper = g.id_testpaper
        LEFT JOIN exm_med_result o ON o.id_testexec = m.id_testexec
        LEFT JOIN exm_eva_result p ON o.id_testexec_result = p.id_testexec_result
        WHERE
            a.sd_testplan_detail = '2'
        and m.sd_testexec = '2'
        AND f.id_org = #{idOrg}
        <if test="medicalrecName != null and medicalrecName != ''">
            and k.name like concat(#{medicalrecName},'%')
        </if>
        <if test="naTestplan != null and naTestplan != ''">
            and f.na_testplan like concat(#{naTestplan},'%')
        </if>
        <if test="naTestpaper != null and naTestpaper != ''">
            and g.na_testpaper like concat(#{naTestpaper},'%')
        </if>
        <if test="fgAsses != null and fgAsses != ''">
            <choose>
                <when test='fgAsses == "2"'>
                    and o.fg_asses ='1'
                </when>
                <otherwise>
                    and o.fg_asses !='1'
                </otherwise>
            </choose>
        </if>
    </select>
    <select id="listReceivePat" resultType="com.sm.open.core.model.vo.pf.biz.test.PfTestReceivePatVo">
        SELECT
            a.id_testplan_detail ,
            o.id_testexec_result,
            case when o.fg_asses ='1' then '2' else '1' end  AS status ,
            a.id_testplan ,
            a.id_student ,
            m.dt_exec_begin AS receiveDate ,
            m.duration AS receiveConsumingTime ,
            b.id_medicalrec ,
            k.id_demo ,
            d.name AS patName ,
            d.sex AS patSex ,
            d.age ,
            k.name AS receiveDoc ,
            e.real_name AS medicalrecName ,
            f.na_testplan ,
            f.id_testpaper ,
            g.na_testpaper ,
            p.score_weight AS score ,
            p.sd_title AS ch ,
            '' AssessTeacher ,
            '' AssessDate
        FROM
            exm_testexec m
        LEFT JOIN exm_testplan_detail a ON m.id_testplan_detail = a.id_testplan_detail
        LEFT JOIN faq_med_tag b ON a.id_medicalrec = b.id_medicalrec
        LEFT JOIN faq_medicalrec k ON b.id_medicalrec = k.id_medicalrec
        LEFT JOIN faq_med_case c ON b.id_med_case = c.id_med_case
        inner JOIN faq_med_case_patient d ON d.id_med_case = b.id_med_case AND c.cd_med_asse = '003'
        LEFT JOIN user_info e ON a.id_student = e.user_id
        LEFT JOIN exm_testplan f ON a.id_testplan = f.id_testplan
        LEFT JOIN exm_testpaper g ON f.id_testpaper = g.id_testpaper
        LEFT JOIN exm_med_result o ON o.id_testexec = m.id_testexec
        LEFT JOIN exm_eva_result p ON o.id_testexec_result = p.id_testexec_result
        WHERE
            a.sd_testplan_detail = '2'
        and m.sd_testexec = '2'
        AND f.id_org = #{idOrg}
        <if test="medicalrecName != null and medicalrecName != ''">
            and k.name like concat(#{medicalrecName},'%')
        </if>
        <if test="naTestplan != null and naTestplan != ''">
            and f.na_testplan like concat(#{naTestplan},'%')
        </if>
        <if test="naTestpaper != null and naTestpaper != ''">
            and g.na_testpaper like concat(#{naTestpaper},'%')
        </if>
        <if test="fgAsses != null and fgAsses != ''">
            <choose>
                <when test='fgAsses == "2"'>
                    and o.fg_asses ='1'
                </when>
                <otherwise>
                    and o.fg_asses !='1'
                </otherwise>
            </choose>
        </if>
        order by m.dt_exec_begin desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectTestPaperInfo"
            resultType="com.sm.open.core.model.vo.pf.biz.test.paper.PfTestPaperInfoVo">
        select
            a.id_testexec, a.dt_exec_begin as beginTime, a.dt_exec_end as endTime, b.id_testexec_result,
            a.sd_testexec, a.cur_serialno
        from
            exm_testexec a
        left join exm_med_result b on a.id_testexec = b.id_testexec and b.serial = 1
        where
        <choose>
            <when test="idTestexecResult != null">
                b.id_testexec_result = #{idTestexecResult}
            </when>
            <otherwise>
                a.id_testplan_detail = #{idTestplanDetail}
                and a.id_student=#{idStudent}
            </otherwise>
        </choose>
    </select>
    <select id="selectPatInfo" resultType="com.sm.open.core.model.vo.pf.biz.test.PfWaitingRoomPatVo">
        SELECT
            c.name ,
            c.sex ,
            c.age ,
            c.complaint
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        LEFT JOIN faq_med_case_patient c ON c.id_med_case = a.id_med_case
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = #{cdMedAsse}
    </select>
    <select id="selectPhotoInfo" resultType="com.sm.open.core.model.vo.pf.biz.test.PfWaitingRoomPatVo">
        SELECT
            a.id_med_case as ext
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = '005'
    </select>
    <select id="countTestCons" resultType="java.lang.Long">
        SELECT
            count(1)
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        LEFT JOIN faq_med_case_inques_list c ON c.id_med_case = a.id_med_case and c.fg_valid = '0'
        LEFT JOIN exm_med_result_inques d on c.id_med_case_list = d.id_med_case_list and d.fg_valid = '0'
        and d.id_testexec_result = #{idTestexecResult}
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = #{cdMedAsse}
        <if test="extItemId != null">
          AND c.id_inques_ca = #{extItemId}
        </if>
        <if test="keyword != null and keyword != ''">
            AND c.des_inques like concat('%',#{keyword},'%')
        </if>
        <if test="sdInquesLabel != null and sdInquesLabel != ''">
            and c.sd_inques_label = #{sdInquesLabel}
            and c.id_inques_pre is null
            and c.id_inques_pre2 is null
            and c.id_inques_pre3 is null
            and c.id_inques_pre4 is null
            and c.id_inques_pre5 is null
        </if>
    </select>
    <select id="listTestCons" resultType="com.sm.open.core.model.entity.FaqMedCaseInquesList">
        SELECT
            c.id_med_case_list ,
            c.id_inques ,
            c.des_inques,
            c.is_masculine,
            IF(d.id_med_case_list is null,0,1) as extQa
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        LEFT JOIN faq_med_case_inques_list c ON c.id_med_case = a.id_med_case and c.fg_valid = '0'
        LEFT JOIN exm_med_result_inques d on c.id_med_case_list = d.id_med_case_list and d.fg_valid = '0'
        and d.id_testexec_result = #{idTestexecResult}
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = #{cdMedAsse}
        <if test="extItemId != null">
            AND c.id_inques_ca = #{extItemId}
        </if>
        <if test="keyword != null and keyword != ''">
            AND c.des_inques like concat('%',#{keyword},'%')
        </if>
        <if test="sdInquesLabel != null and sdInquesLabel != ''">
            and c.sd_inques_label = #{sdInquesLabel}
            and c.id_inques_pre is null
            and c.id_inques_pre2 is null
            and c.id_inques_pre3 is null
            and c.id_inques_pre4 is null
            and c.id_inques_pre5 is null
        </if>
        order by
            c.id_med_case_list
        limit #{offset}, #{limit}
    </select>
    <select id="countTestConsPre" resultType="java.lang.Long">
        SELECT
            count(1)
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        LEFT JOIN faq_med_case_inques_list c ON c.id_med_case = a.id_med_case and c.fg_valid = '0'
        LEFT JOIN exm_med_result_inques d on c.id_med_case_list = d.id_med_case_list and d.fg_valid = '0'
        and d.id_testexec_result = #{idTestexecResult}
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = #{cdMedAsse}
        AND(
            c.id_inques_pre = #{idInques}
            OR c.id_inques_pre2 = #{idInques}
            OR c.id_inques_pre3 = #{idInques}
            OR c.id_inques_pre4 = #{idInques}
            OR c.id_inques_pre5 = #{idInques}
        )
    </select>
    <select id="listTestConsPre" resultType="com.sm.open.core.model.entity.FaqMedCaseInquesList">
        SELECT
            c.id_med_case_list ,
            c.id_inques ,
            c.des_inques,
            c.is_masculine,
            IF(d.id_med_case_list is null,0,1) as extQa
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        LEFT JOIN faq_med_case_inques_list c ON c.id_med_case = a.id_med_case and c.fg_valid = '0'
        LEFT JOIN exm_med_result_inques d on c.id_med_case_list = d.id_med_case_list and d.fg_valid = '0'
        and d.id_testexec_result = #{idTestexecResult}
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = #{cdMedAsse}
        AND(
            c.id_inques_pre = #{idInques}
            OR c.id_inques_pre2 = #{idInques}
            OR c.id_inques_pre3 = #{idInques}
            OR c.id_inques_pre4 = #{idInques}
            OR c.id_inques_pre5 = #{idInques}
        )
        order by
            c.id_med_case_list
        limit #{offset}, #{limit}
    </select>
    <select id="listConsQa" resultType="com.sm.open.core.model.vo.pf.biz.test.PfWaitingRoomConsVo">
        SELECT
            a.id_testexec_result_inques,b.is_masculine, a.fg_clue ,
            b.des_inques , b.id_answer , b.des_answer , b.des_expert ,
            b.id_media, b.fg_reason, b.fg_back, a.des_reason, a.des_reply
        FROM
            exm_med_result_inques a
        LEFT JOIN faq_med_case_inques_list b ON a.id_med_case_list = b.id_med_case_list
        LEFT JOIN bas_media c on b.id_media = c.id_media
        WHERE
            a.id_testexec_result = #{idTestexecResult}
        and a.fg_valid = '0'
        order by
            a.gmt_create
    </select>
    <select id="isExistConsQa" resultType="java.lang.Long">
        select
            id_testexec_result_inques
        from
            exm_med_result_inques
        where
            id_testexec_result = #{idTestexecResult}
        and id_med_case_list = #{idMedCaseList}
    </select>

    <select id="selectPic" resultType="java.lang.Long">
        SELECT
           a.id_med_case
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        WHERE
             a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = #{cdMedAsse}
        limit 1
    </select>

    <select id="countTestCheck" resultType="java.lang.Long">
        SELECT
            count(1)
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        LEFT JOIN faq_med_case_body_list c ON c.id_med_case = a.id_med_case AND c.fg_valid = '0'
        LEFT JOIN bas_body_ca e ON c.id_body_ca = e.id_body_ca
        LEFT JOIN exm_med_result_body d ON c.id_med_case_list = d.id_med_case_list AND d.fg_valid = '0'
        and d.id_testexec_result = #{idTestexecResult}
        left join bas_die f on d.id_die = f.id_die
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = #{cdMedAsse}
        <if test="sdBody != null and sdBody != ''">
            AND c.sd_body = #{sdBody}
        </if>
        <if test="extItemId != null">
            AND c.id_body_ca = #{extItemId}
        </if>
        <if test="keyword != null and keyword != ''">
            AND c.des_body like concat('%',#{keyword},'%')
        </if>
    </select>
    <select id="listTestCheck" resultType="com.sm.open.core.model.entity.FaqMedCaseBodyList">
        SELECT
            c.id_med_case_list ,
            c.des_body ,
            c.id_body ,
            c.cd_check ,
            c.sd_body ,
            e.name AS cdCheckText ,
            IF(d.id_die = '',null,d.id_die) as id_die,
            IF(d.id_med_case_list IS NULL , 0 , 1) AS extQa
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        LEFT JOIN faq_med_case_body_list c ON c.id_med_case = a.id_med_case AND c.fg_valid = '0'
        LEFT JOIN bas_body_ca e ON c.id_body_ca = e.id_body_ca
        LEFT JOIN exm_med_result_body d ON c.id_med_case_list = d.id_med_case_list AND d.fg_valid = '0'
        and d.id_testexec_result = #{idTestexecResult}
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = #{cdMedAsse}
        <if test="sdBody != null and sdBody != ''">
            AND c.sd_body = #{sdBody}
        </if>
        <if test="extItemId != null">
            AND c.id_body_ca = #{extItemId}
        </if>
        <if test="keyword != null and keyword != ''">
            AND c.des_body like concat('%',#{keyword},'%')
        </if>
        ORDER BY
            c.id_med_case_list
        limit #{offset}, #{limit}
    </select>
    <select id="isExistCheckQa" resultType="java.lang.Long">
        select
            id_testexec_result_body
        from
            exm_med_result_body
        where
            id_testexec_result = #{idTestexecResult}
        and id_med_case_list = #{idMedCaseList}
    </select>
    <select id="countTestExam" resultType="java.lang.Long">
        SELECT
            count(1)
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        LEFT JOIN faq_med_case_inspect_list c ON c.id_med_case = a.id_med_case and c.fg_valid = '0'
        LEFT JOIN exm_med_result_inspect d on c.id_med_case_list = d.id_med_case_list and d.fg_valid = '0'
        and d.id_testexec_result = #{idTestexecResult}
        left join bas_die e on d.id_die = e.id_die
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = #{cdMedAsse}
        <if test="extItemId != null">
            AND c.id_inspect = #{extItemId}
        </if>
        <if test="keyword != null and keyword != ''">
            AND c.na_item like concat('%',#{keyword},'%')
        </if>
    </select>
    <select id="listTestExam" resultType="com.sm.open.core.model.entity.FaqMedCaseInspectList">
        SELECT
            c.id_med_case_list ,
	        c.na_item,
            c.is_masculine,
	        c.id_inspect_item,
            IF(d.id_die = '',null,d.id_die) as id_die, e.name as idDieText,
            IF(d.id_med_case_list is null,0,1) as extQa
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        LEFT JOIN faq_med_case_inspect_list c ON c.id_med_case = a.id_med_case and c.fg_valid = '0'
        LEFT JOIN exm_med_result_inspect d on c.id_med_case_list = d.id_med_case_list and d.fg_valid = '0'
        and d.id_testexec_result = #{idTestexecResult}
        left join bas_die e on d.id_die = e.id_die
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = #{cdMedAsse}
        <if test="extItemId != null">
            AND c.id_inspect = #{extItemId}
        </if>
        <if test="keyword != null and keyword != ''">
            AND c.na_item like concat('%',#{keyword},'%')
        </if>
        order by
            c.id_med_case_list
        limit #{offset}, #{limit}
    </select>
    <select id="isExistExamQa" resultType="java.lang.Long">
        select
            id_testexec_result_inspect
        from
            exm_med_result_inspect
        where
            id_testexec_result = #{idTestexecResult}
        and id_med_case_list = #{idMedCaseList}
        AND fg_valid = '0'
    </select>
    <select id="listCheckQa" resultType="com.sm.open.core.model.vo.pf.biz.test.PfWaitingRoomCheckVo">
        SELECT
            a.id_testexec_result_body , a.fg_clue ,
            b.des_body , b.id_result , b.des_result , b.des_expert ,
            b.id_media, b.fg_reason, b.fg_back, a.des_reply
        FROM
            exm_med_result_body a
        LEFT JOIN faq_med_case_body_list b ON a.id_med_case_list = b.id_med_case_list
        WHERE
            a.id_testexec_result = #{idTestexecResult}
        and a.fg_valid = '0'
        order by
            a.gmt_create
    </select>
    <select id="listExamQa" resultType="com.sm.open.core.model.vo.pf.biz.test.PfWaitingRoomExamVo">
        SELECT
            a.id_testexec_result_inspect , a.fg_clue ,
            b.na_item , b.id_result , b.val_result, b.des_stand, b.des_expert ,
            b.is_masculine,
            b.id_media, b.fg_reason, b.fg_back, a.des_reply
        FROM
            exm_med_result_inspect a
        LEFT JOIN faq_med_case_inspect_list b ON a.id_med_case_list = b.id_med_case_list
        WHERE
            a.id_testexec_result = #{idTestexecResult}
        and a.fg_valid = '0'
        order by
            a.gmt_create
    </select>
    <select id="listReferral" resultType="com.sm.open.core.model.entity.ExmMedResultReferral">
        SELECT
            a.id_testexec_result_referral, a.id_testexec_result, a.sd_eva_referral, 
            a.id_die, a.reason_in, a.fg_exclude, a.reason_out, a.fg_valid, a.gmt_create, a.gmt_modify,
            b.name as idDieText
        FROM
            exm_med_result_referral a
        LEFT JOIN bas_die b ON a.id_die = b.id_die
        WHERE
            a.id_testexec_result = #{idTestexecResult}
        and a.fg_valid = '0'
    </select>
    <select id="selectOrders" resultType="com.sm.open.core.model.entity.ExmMedResultOrder">
        SELECT
            id_testexec_result_order ,
            id_testexec_result ,
            des_check ,
            sd_nurs_rout ,
            cd_nurs_level ,
            sd_diet ,
            sd_position ,
            des_special ,
            fg_valid ,
            gmt_create
        FROM
            exm_med_result_order
        WHERE
            fg_valid = '0'
        and id_testexec_result = #{idTestexecResult}
        LIMIT 1
    </select>
    <select id="listLongDrugs" resultType="com.sm.open.core.model.entity.ExmMedResultOrderLogDrugs">
        SELECT
            a.id_order_long_drugs, a.id_testexec_result_order, a.id_long_drugs, a.fg_valid, b.name as idLongDrugsText
        FROM
            exm_med_result_order_log_drugs a
        LEFT JOIN bas_drugs b on a.id_long_drugs = b.id_drugs
        WHERE
            a.fg_valid = '0'
        and a.id_testexec_result_order = #{idTestexecResultOrder}
    </select>
    <select id="listShortDrugs" resultType="com.sm.open.core.model.entity.ExmMedResultOrderShortDrugs">
        SELECT
            a.id_order_short_drugs, a.id_testexec_result_order, a.id_short_drugs, a.fg_valid, b.name as idShortDrugsText
        FROM
            exm_med_result_order_short_drugs a
        LEFT JOIN bas_drugs b on a.id_short_drugs = b.id_drugs
        WHERE
            a.fg_valid = '0'
        and a.id_testexec_result_order = #{idTestexecResultOrder}
    </select>
    <select id="listDiagnosis" resultType="com.sm.open.core.model.entity.ExmMedResultDiagnosis">
        select
            a.id_testexec_result_diagnosis,
            a.id_testexec_result,
            a.id_die,
            a.gmt_create,
            b.NAME, as idDieText
        from exm_med_result_diagnosis a
        left join bas_die b on a.id_die = b.id_die
        where
            a.id_testexec_result = #{idTestexecResult}
        and a.fg_valid = '0'
    </select>
    <select id="selectDiagnosis" resultType="com.sm.open.core.model.entity.ExmMedResultDiagnosis">
        select   
            a.id_testexec_result_diagnosis,
            a.id_testexec_result,
            a.id_die,
            a.fg_valid,
            a.gmt_create, b.name as idDieText
        from exm_med_result_diagnosis a
        left join bas_die b on a.id_die = b.id_die
        where
            a.id_testexec_result = #{idTestexecResult}
        and a.fg_valid = '0'
        limit 1
    </select>
    <select id="selectDiagnosisNew" resultType="com.sm.open.core.model.vo.pf.biz.test.PfWaitingRoomDiagnosisVo">
        select
            des_die_reason
        from
            exm_med_result_diagnosis
        where
            id_testexec_result = #{idTestexecResult}
        and id_testexec_result_referral = #{idTestexecResultReferral}
        and id_die = #{idDie}
    </select>
    <select id="selectSummary" resultType="com.sm.open.core.model.entity.ExmMedResultSummary">
        select
            id_testexec_result_sumary,
            id_testexec_result,
            die_sumary,
            fg_valid,
            gmt_create, 
            des_condition_hpi, 
            des_condition_pe, 
            des_condition_fe, 
            des_sumary_hpi, 
            des_sumary_pe, 
            des_sumary_fe
        from
            exm_med_result_summary
        where
            id_testexec_result = #{idTestexecResult}
        and fg_valid = '0'
        limit 1
    </select>
    <select id="listDieReason" resultType="com.sm.open.core.model.vo.pf.biz.test.PfWaitingRoomDieReasonVo">
        SELECT
            a.id_die_reason, a.id_testexec_result_diagnosis, a.sd_eva_effciency,a.id_med_case_list as id,
            case a.sd_eva_effciency when '1' then b.des_inques when '2' then c.des_body when '3' then d.na_item else '' end as idText        FROM
            exm_med_result_die_reason a
        LEFT JOIN faq_med_case_inques_list b ON a.id_med_case_list = b.id_med_case_list
        AND a.sd_eva_effciency = 1
        LEFT JOIN faq_med_case_body_list c ON a.id_med_case_list = c.id_med_case_list
        AND a.sd_eva_effciency = 2
        LEFT JOIN faq_med_case_inspect_list d ON a.id_med_case_list = d.id_med_case_list
        AND a.sd_eva_effciency = 3
        where a.id_testexec_result_diagnosis = #{idTestexecResultDiagnosis}
        and a.fg_valid = '0'
    </select>
    <select id="listReadyDieReason"
            resultType="com.sm.open.core.model.vo.pf.biz.test.PfWaitingRoomDieReasonVo">
        SELECT
            '1' AS sdEvaEffciency ,
            a.id_med_case_list AS id ,
            b.des_inques AS idText,
            b.id_inques as extId
        FROM
            exm_med_result_inques a
        LEFT JOIN faq_med_case_inques_list b ON a.id_med_case_list = b.id_med_case_list
        WHERE
            a.id_testexec_result = #{idTestexecResult}
        AND a.fg_valid = '0'
        <if test="keyword != null and keyword != ''">
            AND b.des_inques like concat('%',#{keyword},'%')
        </if>
        UNION ALL
        SELECT
            '2' AS sdEvaEffciency ,
            a.id_med_case_list AS id ,
            b.des_body AS idText,
            b.id_body as extId
        FROM
            exm_med_result_body a
        LEFT JOIN faq_med_case_body_list b ON a.id_med_case_list = b.id_med_case_list
        WHERE
            a.id_testexec_result = #{idTestexecResult}
        AND a.fg_valid = '0'
        <if test="keyword != null and keyword != ''">
            AND b.des_body like concat('%',#{keyword},'%')
        </if>
        UNION ALL
        SELECT
            '3' AS sdEvaEffciency ,
            a.id_med_case_list AS id ,
            b.na_item AS idText,
            b.id_inspect_item as extId
        FROM
            exm_med_result_inspect a
        LEFT JOIN faq_med_case_inspect_list b ON a.id_med_case_list = b.id_med_case_list
        WHERE
            a.id_testexec_result = #{idTestexecResult}
        AND a.fg_valid = '0'
        <if test="keyword != null and keyword != ''">
            AND b.na_item like concat('%',#{keyword},'%')
        </if>
    </select>
    <select id="listEva" resultType="com.sm.open.core.model.vo.pf.biz.test.eva.PfEvaExecVo">
        SELECT
            a.id_testexec_result_dimension ,
            a.id_testexec_result ,
            a.id_dimemsion ,
            a.score_max,
            a.weight_score_max,
            IF(b.par_dimemsion is null,'',b.name) as nzName,
	        IF(b.par_dimemsion is null, b.name, '') as pgItem,
            b.par_dimemsion ,
            a.weight_dimemsion ,
            a.score_dimemsion ,
            a.weight_score_dimemsion,
            b.fg_system_algorithm,
            des_dimemsion
        FROM
            exm_eva_dimension a
        LEFT JOIN bas_demo_asses b ON a.id_dimemsion = b.id_dimemsion
        WHERE
            id_testexec_result = #{idTestexecResult}
        <if test="filterFlag == 1">
            and b.fg_system_algorithm = '1'
        </if>
        ORDER BY
            IFNULL(b.par_dimemsion, a.id_dimemsion) , a.id_dimemsion,
            b.sort
    </select>
    <select id="getScore" resultType="com.sm.open.core.model.vo.pf.biz.test.eva.PfEvaExecVo">
        SELECT
            a.id_dimemsion,
            max(b. NAME) AS pgItem ,
            ROUND(AVG(a.weight_score_dimemsion), 3) as avgScore
        FROM
            exm_eva_dimension a
        LEFT JOIN bas_demo_asses b ON a.id_dimemsion = b.id_dimemsion
        WHERE
            a.id_testexec_result in (
            <foreach collection="list" item="item" separator="," >
                #{item}
            </foreach>
        )
        AND b.par_dimemsion IS NULL
        GROUP BY
            a.id_dimemsion
        ORDER BY
            a.id_dimemsion
    </select>
    <select id="getExecResultId" resultType="java.lang.Long">
        SELECT
            b.id_testexec_result
        FROM
            exm_testexec a
        LEFT JOIN exm_med_result b ON a.id_testexec = b.id_testexec
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.fg_final_result = '1'
        AND fg_asses = '1'
    </select>
    <select id="listEvaLog" resultType="com.sm.open.core.model.entity.ExmEvaLog">
        select* from exm_eva_log where id_testexec_result_dimension in
        (select id_testexec_result_dimension from exm_eva_dimension where id_testexec_result =  #{idTestexecResult})
    </select>

    <select id="medEva" statementType="CALLABLE" >
        call P_EVA_AMAIN(
            #{idTestexecResult,mode=IN,jdbcType=INTEGER},
            #{parCode,mode=OUT,jdbcType=INTEGER},
            #{parMsg,mode=OUT,jdbcType=VARCHAR}
        )
    </select>
    <select id="listExecLogInques" resultType="com.sm.open.core.model.vo.pf.biz.test.eva.PfExecLogVo">
        SELECT
            '问诊' as stage,
            '添加问诊' as operation,
            b.des_inques as answer,
            a.gmt_create as logDate
        FROM
            exm_med_result_inques a
        left join faq_med_case_inques_list b on a.id_med_case_list = b.id_med_case_list
        WHERE
            a.id_testexec_result = #{idTestexecResult}
        AND a.fg_valid = '0'
    </select>
    <select id="listExecLogBody" resultType="com.sm.open.core.model.vo.pf.biz.test.eva.PfExecLogVo">
        SELECT
            '检查' as stage,
            '添加检查' as operation,
            b.des_body as answer,
            a.gmt_create as logDate
        FROM
            exm_med_result_body a
        left join faq_med_case_body_list b on a.id_med_case_list = b.id_med_case_list
        WHERE
            a.id_testexec_result = #{idTestexecResult}
        AND a.fg_valid = '0'
    </select>
    <select id="listExecLogInspect" resultType="com.sm.open.core.model.vo.pf.biz.test.eva.PfExecLogVo">
        SELECT
            '检验' as stage,
            '添加检验' as operation,
            b.na_item as answer,
            a.gmt_create as logDate
        FROM
            exm_med_result_inspect a
        left join faq_med_case_inspect_list b on a.id_med_case_list = b.id_med_case_list
        WHERE
            a.id_testexec_result = #{idTestexecResult}
        AND a.fg_valid = '0'
    </select>
    <select id="selectEvaResult" resultType="com.sm.open.core.model.entity.ExmEvaResult">
        select id_testexec_result,score_weight,sd_title
        from exm_eva_result
        where id_testexec_result = #{idTestexecResult}
        limit 1
    </select>
    <select id="listExecLogDiagnosis" resultType="com.sm.open.core.model.vo.pf.biz.test.eva.PfExecLogVo">
         SELECT	
            a.id_testexec_result_diagnosis as extId,
            '诊断' as stage,
            '添加诊断' as operation,
            b.name as answer,
            a.gmt_create as logDate
        FROM
            exm_med_result_diagnosis a
        left join bas_die b on a.id_die = b.id_die
        WHERE
            a.id_testexec_result = #{idTestexecResult}
        AND a.fg_valid = '0'
    </select>
    <select id="listExecLogDiagnosisReason" resultType="com.sm.open.core.model.vo.pf.biz.test.eva.PfExecLogVo">
        SELECT
            '诊断' AS stage ,
            '添加诊断理由' AS operation ,
            '' AS answer ,
            gmt_create AS logDate
        FROM
            exm_med_result_die_reason
        WHERE
            id_testexec_result_diagnosis = #{idTestexecResultDiagnosis}
    </select>
    <select id="listExecLogOrder" resultType="com.sm.open.core.model.vo.pf.biz.test.eva.PfExecLogVo">

    </select>
    <select id="selectAllReferral" resultType="com.sm.open.core.model.entity.ExmMedResultReferral">
        select
           a.id_testexec_result_referral,
           a.id_testexec_result ,
           a.id_die ,
           a.fg_exclude ,
           a.fg_valid ,
           a.gmt_create ,
           a.gmt_modify,
           IFNULL(b.NAME,c.NAME) AS idDieText,
           IF(b.NAME is null, 1, 0) as catalogue
        from exm_med_result_referral a
        left join bas_die b on a.id_die = b.id_die and a.fg_die_class = '2'
        LEFT JOIN bas_die_class c on a.id_die = c.id_dieclass and a.fg_die_class = '1'
        WHERE
            a.id_testexec_result = #{idTestexecResult}
        AND a.fg_valid = '0'
    </select>
    <select id="listReferralReason" resultType="com.sm.open.core.model.vo.pf.biz.test.PfReferralReasonVo">
        SELECT
            a.id_referral_reason ,
            a.id_testexec_result_referral ,
            a.sd_eva_effciency ,
            a.id_med_case_list AS id ,
            a.fg_exclude ,
            CASE a.sd_eva_effciency
                WHEN '1' THEN
                    b.des_inques
                WHEN '2' THEN
                    c.des_body
                WHEN '3' THEN
                    d.na_item
                ELSE
                    ''
                END AS idText
        FROM
            exm_med_result_referral_reason a
                LEFT JOIN faq_med_case_inques_list b ON a.id_med_case_list = b.id_med_case_list
                AND a.sd_eva_effciency = 1
                LEFT JOIN faq_med_case_body_list c ON a.id_med_case_list = c.id_med_case_list
                AND a.sd_eva_effciency = 2
                LEFT JOIN faq_med_case_inspect_list d ON a.id_med_case_list = d.id_med_case_list
                AND a.sd_eva_effciency = 3
        WHERE
            a.id_testexec_result_referral = #{idTestexecResultReferral}
        AND a.fg_valid = '0'
        order by a.gmt_create
    </select>
    <select id="selectQzId" resultType="java.lang.Long">
        SELECT
            a.id_testexec_result_diagnosis
        FROM
            exm_med_result_diagnosis a
        WHERE
            a.id_testexec_result_referral = #{idTestexecResultReferral}
    </select>
    <select id="selectDelPlanDetailstatus" resultType="java.lang.Integer">
        select
            count(1)
        from
            exm_testplan_detail
        WHERE
            id_testplan_detail in (
        <foreach collection="list" item="item" separator="," >
            #{item}
        </foreach>
        )
        AND sd_testplan_detail != '0'
    </select>
    <select id="listAllReferralDie" resultType="com.sm.open.core.model.entity.BasDie">
        select
            a.id_testexec_result_referral,
            IFNULL(bd.id_die,d.id_dieclass) as id_die,
            if(a.fg_die_class = '1', CONCAT(d.NAME, '（目录）'), CONCAT(bd.NAME, '（疾病）')) as name,
            bd.cd_dieclass ,
            bdc.NAME AS cdDieclassText ,
            bd.icd ,
            bd.pinyin,
            a.fg_die_class
        from exm_med_result_referral a
        left join bas_die bd on a.id_die = bd.id_die and bd.fg_valid = '0' and a.fg_die_class = '2'
        left join bas_die_class bdc on bd.cd_dieclass = bdc.cd
        LEFT JOIN bas_die_class d ON a.id_die = d.cd and a.fg_die_class = '1'
        WHERE
            a.id_testexec_result = #{idTestexecResult}
        AND a.fg_valid = '0'
        <if test="keywords != null and keywords != '' ">
            AND (bd.name like concat('%',#{keywords},'%')
            or   bd.icd like concat('%',#{keywords},'%')
            or   bd.pinyin like concat('%',#{keywords},'%')
            or d.name like concat('%',#{keywords},'%'))
        </if>
    </select>

    <select id="listQzItem" statementType="CALLABLE"
            resultType="com.sm.open.core.model.vo.pf.biz.test.eva.PfDiagnosticAnalysisVo">
        call P_GET_DIAGNOSISL(
        #{idTestexecResult,mode=IN,jdbcType=INTEGER},
        #{parCode,mode=OUT,jdbcType=INTEGER},
        #{parMsg,mode=OUT,jdbcType=VARCHAR}
        )
    </select>

    <select id="listPcnzItem" statementType="CALLABLE"
            resultType="com.sm.open.core.model.vo.pf.biz.test.eva.PfDiagnosticAnalysisVo">
        call P_GET_UN_REFERRAL(
        #{idTestexecResult,mode=IN,jdbcType=INTEGER},
        #{parCode,mode=OUT,jdbcType=INTEGER},
        #{parMsg,mode=OUT,jdbcType=VARCHAR}
        )
    </select>
    <select id="getDiagnosislReason" statementType="CALLABLE"
            resultType="com.sm.open.core.model.vo.pf.biz.test.eva.PfAnalysisVo">
        call P_GET_DIAGNOSISL_REASON(
        #{idTestexecResult,mode=IN,jdbcType=INTEGER},
        #{parCode,mode=OUT,jdbcType=INTEGER},
        #{parMsg,mode=OUT,jdbcType=VARCHAR}
        )
    </select>
    <select id="getUnReferralReason" statementType="CALLABLE"
            resultType="com.sm.open.core.model.vo.pf.biz.test.eva.PfAnalysisVo">
        call P_GET_UN_REFERRAL_REASON(
        #{idTestexecResult,mode=IN,jdbcType=INTEGER},
        #{parCode,mode=OUT,jdbcType=INTEGER},
        #{parMsg,mode=OUT,jdbcType=VARCHAR}
        )
    </select>
    <select id="getInques" resultType="com.sm.open.core.model.vo.pf.biz.test.eva.PfDiagnosticAnalysisDetailVo">
        SELECT
            a.des_inques AS question ,
            a.des_answer AS answer
        FROM
            faq_med_case_inques_list a
        WHERE
            id_med_case = #{idMedCase}
        and a.id_inques in (
        <foreach collection="list" item="item" separator="," >
            #{item}
        </foreach>
        )
    </select>
    <select id="getBody" resultType="com.sm.open.core.model.vo.pf.biz.test.eva.PfDiagnosticAnalysisDetailVo">
        SELECT
            a.des_body AS question ,
            a.des_result AS answer
        FROM
          faq_med_case_body_list a
        WHERE
            id_med_case = #{idMedCase}
        and a.id_body in (
        <foreach collection="list" item="item" separator="," >
            #{item}
        </foreach>
        )
    </select>

    <select id="getCheck" resultType="com.sm.open.core.model.vo.pf.biz.test.eva.PfDiagnosticAnalysisDetailVo">
        SELECT
            a.na_item AS question ,
            a.val_result AS answer
        FROM
            faq_med_case_inspect_list a
        WHERE
            id_med_case = #{idMedCase}
        and a.id_inspect_item in (
        <foreach collection="list" item="item" separator="," >
            #{item}
        </foreach>
        )
    </select>
    <select id="getIdMedCase" resultType="java.lang.Long">
        select id_med_case from faq_med_tag a
        left join bas_medical_tag b on a.id_tag = b.id_tag
        where a.id_medicalrec = #{idMedicalrec} and b.cd_med_asse = #{cdMedAsse}
    </select>

    <select id="getIdByIdTestexecResult" resultType="java.lang.Long">
        select id_testexec_result_sumary from exm_med_result_summary where id_testexec_result = #{idTestexecResult}
    </select>
    <select id="selectManyDie" resultType="java.lang.String">
        select name from bas_die
        where id_die in (
        <foreach collection="idDies" item="item" separator="," >
            #{item}
        </foreach>
        )
    </select>
    <select id="selectManyNzDie" resultType="java.lang.String">
        select
            IFNULL(b.NAME,c.NAME) AS idDieText
        from exm_med_result_referral a
        left join bas_die b on a.id_die = b.id_die and a.fg_die_class = '2'
        LEFT JOIN bas_die_class c on a.id_die = c.id_dieclass and a.fg_die_class = '1'
        WHERE
        a.id_testexec_result_referral in (
        <foreach collection="ids" item="item" separator="," >
            #{item}
        </foreach>
        )
        AND a.fg_valid = '0'
    </select>
    <select id="selectManyNzDieMap" resultType="java.util.Map">
        select
            IFNULL(b.NAME,c.NAME) AS idDieText,
            a.fg_exclude as fgExclude
        from exm_med_result_referral a
        left join bas_die b on a.id_die = b.id_die and a.fg_die_class = '2'
        LEFT JOIN bas_die_class c on a.id_die = c.id_dieclass and a.fg_die_class = '1'
        WHERE
            a.id_testexec_result_referral in (
        <foreach collection="ids" item="item" separator="," >
            #{item}
        </foreach>
        )
        AND a.fg_valid = '0'
    </select>


    <select id="listAllExamByIdInspect" resultType="com.sm.open.core.model.entity.FaqMedCaseInspectList">
        SELECT
            c.id_med_case_list, c.id_inspect_item
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        LEFT JOIN faq_med_case_inspect_list c ON c.id_med_case = a.id_med_case
        AND c.fg_valid = '0'
        LEFT JOIN exm_med_result_inspect d ON c.id_med_case_list = d.id_med_case_list
        AND d.fg_valid = '0'
        AND d.id_testexec_result = #{idTestexecResult}
        LEFT JOIN bas_die e ON d.id_die = e.id_die
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = '006'
        AND c.id_inspect = #{idInspect}
        and d.id_testexec_result_inspect is null
    </select>
    <select id="sumCostMoney" resultType="java.math.BigDecimal">
        SELECT
            IFNULL(sum(c.cost_money), 0.00) as cost_money
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        LEFT JOIN faq_med_case_inspect_list c ON c.id_med_case = a.id_med_case
        AND c.fg_valid = '0'
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = '006'
        AND c.id_inspect = #{idInspect}
    </select>
    <select id="listAllIdInspect" resultType="java.lang.Long">
        SELECT
            c.id_inspect_item
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        LEFT JOIN faq_med_case_inspect_list c ON c.id_med_case = a.id_med_case
        AND c.fg_valid = '0'
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = '006'
        AND c.id_inspect = #{idInspect}
    </select>
    <select id="getDiagnosisId" resultType="java.lang.Long">
        select
            id_testexec_result_diagnosis
        from
            exm_med_result_diagnosis
        where
            id_testexec_result = #{idTestexecResult}
        and id_testexec_result_referral = #{idTestexecResultReferral}
        and id_die = #{idDie}
    </select>
    <select id="getNzDie" resultType="java.lang.String">
        select id_die from exm_med_result_body where id_testexec_result = #{idTestexecResult} and id_die is not null
        union
        select id_die from exm_med_result_inspect where id_testexec_result = #{idTestexecResult} and id_die is not null
    </select>
    <select id="getReferralId" resultType="java.lang.String">
        SELECT
            a.id_testexec_result_referral
        FROM
            exm_med_result_referral a
        WHERE
            a.id_testexec_result = #{idTestexecResult}
        AND a.fg_valid = '0'
    </select>
    <select id="countDiagnosticChart" resultType="java.lang.Long">
        SELECT
            count(1)
        from
            (SELECT
                CONCAT('body-',a.id_testexec_result_body) as id, a.fg_clue, b.des_body as checkItem, b.des_result, a.id_die
                FROM
                exm_med_result_body a
                LEFT JOIN faq_med_case_body_list b ON a.id_med_case_list = b.id_med_case_list
                WHERE
                a.id_testexec_result = #{idTestexecResult}
                union all
                SELECT
                CONCAT('inspect-',a.id_testexec_result_inspect) as id, a.fg_clue, b.na_item, b.val_result, a.id_die
                FROM
                exm_med_result_inspect a
                LEFT JOIN faq_med_case_inspect_list b ON a.id_med_case_list = b.id_med_case_list
                WHERE
                a.id_testexec_result = #{idTestexecResult}
            ) temp
        <where>
            <if test="type == 1">
                temp.id_die not LIKE '%,%' or temp.id_die is null
            </if>
            <if test="type == 2">
                temp.id_die LIKE '%,%'
            </if>
        </where>
    </select>
    <select id="listDiagnosticChart"
            resultType="com.sm.open.core.model.vo.pf.biz.test.PfWaitingRoomChartDetailVo">
        SELECT
            id ,
            fg_clue ,
            checkItem ,
            des_result
        FROM
            (SELECT
                CONCAT('body-',a.id_testexec_result_body) as id, a.fg_clue, b.des_body as checkItem, b.des_result, a.id_die
            FROM
                exm_med_result_body a
            LEFT JOIN faq_med_case_body_list b ON a.id_med_case_list = b.id_med_case_list
            WHERE
                a.id_testexec_result = #{idTestexecResult}
            union all
            SELECT
                CONCAT('inspect-',a.id_testexec_result_inspect) as id, a.fg_clue, b.na_item, b.val_result, a.id_die
            FROM
                exm_med_result_inspect a
            LEFT JOIN faq_med_case_inspect_list b ON a.id_med_case_list = b.id_med_case_list
            WHERE
                a.id_testexec_result = #{idTestexecResult}
            ) temp
        <where>
            <if test="type == 1">
                temp.id_die not LIKE '%,%' or temp.id_die is null
            </if>
            <if test="type == 2">
                temp.id_die LIKE '%,%'
            </if>
        </where>
        limit #{offset}, #{limit}
    </select>
    <select id="selectFinishExamInfo" resultType="com.sm.open.core.model.vo.pf.biz.test.PfWaitingRoomFinishVo">
        SELECT
            a.id_medicalrec ,
            a.id_student ,
            b.id_testpaper ,
            c.sd_use
        FROM
            exm_testplan_detail a
        LEFT JOIN exm_testplan b ON a.id_testplan = b.id_testplan
        LEFT JOIN faq_medicalrec c ON a.id_medicalrec = c.id_medicalrec
        WHERE
            a.id_testplan_detail = #{idTestplanDetail}
    </select>
    <select id="selectAssessPatIdMedCase" resultType="java.lang.Long">
        SELECT
            c.id_med_case
        FROM
            exm_testplan_detail a
        LEFT JOIN faq_med_tag b ON a.id_medicalrec = b.id_medicalrec
        inner JOIN faq_med_case c ON b.id_med_case = c.id_med_case  AND c.cd_med_asse = '003'
        WHERE
            a.id_testplan_detail = #{idTestplanDetail}
    </select>

    <select id="selectEvaGuideContent" resultType="java.lang.String">
        select
            guide_content
        from
            faq_med_case_guide
        where
            id_med_case =
        (
            SELECT
                c.id_med_case
            FROM
                exm_testplan_detail a
            LEFT JOIN faq_med_tag b ON a.id_medicalrec = b.id_medicalrec
            inner JOIN faq_med_case c ON b.id_med_case = c.id_med_case  AND c.cd_med_asse = '010'
            WHERE
                a.id_testplan_detail = #{idTestplanDetail}
        )
    </select>
    <select id="examAmountTotal" resultType="java.math.BigDecimal">
        SELECT
            IFNULL(sum(c.cost_money), 0.00) as cost_money
        FROM
            faq_med_tag a
        LEFT JOIN bas_medical_tag b ON a.id_tag = b.id_tag
        LEFT JOIN faq_med_case_inspect_list c ON c.id_med_case = a.id_med_case and c.fg_valid = '0'
        LEFT JOIN exm_med_result_inspect d on c.id_med_case_list = d.id_med_case_list and d.fg_valid = '0'
        and d.id_testexec_result = #{idTestexecResult}
        WHERE
            a.id_medicalrec = #{idMedicalrec}
        AND b.cd_med_asse = #{cdMedAsse}
        and d.id_testexec_result_inspect is not null
        <if test="extItemId != null">
            AND c.id_inspect = #{extItemId}
        </if>
        <if test="keyword != null and keyword != ''">
            AND c.na_item like concat('%',#{keyword},'%')
        </if>
    </select>

</mapper>